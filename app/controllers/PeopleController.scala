/**
 * Generated by apidoc - http://www.apidoc.me
 * Service version: 0.1.0-SNAPSHOT
 * apidoc:0.9.48 http://localhost:9000/movio/apidoc-generator-reference/0.1.0-SNAPSHOT/play_app_controllers
 */

package controllers

import javax.inject.Inject
import javax.inject.Singleton

import play.api.mvc._
import play.api.libs.json._

import scala.concurrent.duration._
import scala.util.{Success, Failure}

import services.PeopleService

class PeopleController @Singleton @Inject() (service: PeopleService) extends Controller {
  import movio.apidoc.generator.reference.v0.models._
  import movio.apidoc.generator.reference.v0.models.json._
  import play.api.libs.concurrent.Execution.Implicits.defaultContext
  
  def postV0AndPersonByTenant(
    tenant: String
  ) = Action.async(BodyParsers.parse.json[movio.apidoc.generator.reference.v0.models.Person]) {  request =>
    service.post(request, request.body, tenant).map(_ match {
      case Success(result) =>
        Ok(Json.toJson(result))
      case Failure(ex) =>
        InternalServerError(Json.toJson(Error("500", ex.toString)))
    })
  }

  def postV0ByTenant(
    tenant: String
  ) = Action.async(BodyParsers.parse.json[Seq[movio.apidoc.generator.reference.v0.models.Person]]) {  request =>
    service.post(request, request.body, tenant).map(_ match {
      case Success(result) =>
        Ok(Json.toJson(result.size))
      case Failure(ex) =>
        InternalServerError(Json.toJson(Error("500", ex.toString)))
    })
  }
}
